function nodeClass(value){
  this.val = value;
  this.next = null;
}

node1 = new nodeClass(1);

function addFront(firstNode, value){
  var newNode = new nodeClass(value);
  newNode.next = firstNode;
  return newNode;
}

console.log(addFront(node1,2));


function nodeClass(value){
  this.val = value;
  this.next = null;
}

node1 = new nodeClass(1);
node2 = new nodeClass(2);
node1.next = node2;

function removeFront(firstNode){
  if(firstNode){
    var newNode = firstNode.next;
    firstNode.next = null;
    return newNode;
  }
  return null;
}
console.log(removeFront(node1));

function contains(list, value){
  if(list){
    var current = list.head;
    while(current){
      if(current.val == value){
        return true;
      }
      current = current.next;
    }
    return false;
  }
}


function front(firstNode){
  if(firstNode){
    return firstNode.val;
  }
  return null;
}

function length(firstNode){
  if(firstNode){
    var current = firstNode;
    var nodeSize = 1;
    while(current){
      if(current.next != null){
        current = current.next
        nodeSize += 1;
      }
    }
    return nodeSize;
  }
  return null;
}
function average(node){
  if(node){
    var current = node;
    var length = 0;
    var sum = 0;
    while(current){
      sum += current.val;
      current = current.next;
      length += 1; 
    }
    return sum/length;
  }
}

console.log(average(node1));

function min(node){
  if(node){
    var current = node;
    var min = node.val;
    while(current){
      if(current.val < min){
        min = current.val;
      }
      current = current.next
    }
    return min;
  }
  return null;
}

console.log(min(node1));

function max(node){
  if(node){
    var current = node;
    var max_value = node.val;
    while(current){
        if(current.val > max_value){
          max_value = current.val;
        }
      current = current.next
    }
    return max_value;
  }
  return null;
}

console.log(max(node1));
function display(node){
  if(node){
    var objectOfNodes = {};
    var length = 1;
    var current = node;
    while(current){
      objectOfNodes["node"+length] = current.val;
      length += 1;
      current = current.next;
    }
    for(var key in objectOfNodes){
      console.log("List of nodes " + key + ' value is '+  objectOfNodes[key]);
    }
  }
}